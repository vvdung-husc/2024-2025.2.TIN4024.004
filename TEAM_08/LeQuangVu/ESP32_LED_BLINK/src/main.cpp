#include <Arduino.h>

// ƒê·ªãnh nghƒ©a c√°c ch√¢n LED
#define LED_RED 23   
#define LED_YELLOW 22  
#define LED_GREEN 21   

// Bi·∫øn l∆∞u th·ªùi gian
ulong currentMiliseconds = 0; 
ulong ledStart = 0; 

// Tr·∫°ng th√°i ƒë√®n giao th√¥ng
enum TrafficLightState { RED, GREEN, YELLOW };
TrafficLightState currentState = RED;

bool IsReady(ulong &ulTimer, uint32_t milisecond);
void ControlTrafficLight();

void setup() {
  Serial.begin(115200);
  
  pinMode(LED_RED, OUTPUT);
  pinMode(LED_YELLOW, OUTPUT);
  pinMode(LED_GREEN, OUTPUT);
}

void loop() {
  currentMiliseconds = millis();
  ControlTrafficLight();
}

bool IsReady(ulong &ulTimer, uint32_t milisecond) {
  if (currentMiliseconds - ulTimer < milisecond)
    return false;
  ulTimer = currentMiliseconds;
  return true;
}

void ControlTrafficLight() {
  static uint32_t duration = 5000; // Th·ªùi gian chuy·ªÉn ƒë√®n m·∫∑c ƒë·ªãnh

  if (!IsReady(ledStart, duration)) 
    return;

  // Chuy·ªÉn ƒë·ªïi tr·∫°ng th√°i ƒë√®n giao th√¥ng
  switch (currentState) {
    case RED:
      digitalWrite(LED_RED, HIGH);
      digitalWrite(LED_YELLOW, LOW);
      digitalWrite(LED_GREEN, LOW);
      Serial.println("üî¥ ƒê√àN ƒê·ªé - D·ª™NG L·∫†I");
      duration = 5000; // ƒê·ªè s√°ng 5 gi√¢y
      currentState = GREEN;
      break;

    case GREEN:
      digitalWrite(LED_RED, LOW);
      digitalWrite(LED_YELLOW, LOW);
      digitalWrite(LED_GREEN, HIGH);
      Serial.println("üü¢ ƒê√àN XANH - ƒêI");
      duration = 4000; // Xanh s√°ng 4 gi√¢y
      currentState = YELLOW;
      break;

    case YELLOW:
      digitalWrite(LED_RED, LOW);
      digitalWrite(LED_YELLOW, HIGH);
      digitalWrite(LED_GREEN, LOW);
      Serial.println("üü° ƒê√àN V√ÄNG - CHU·∫®N B·ªä D·ª™NG");
      duration = 2000; // V√†ng s√°ng 2 gi√¢y
      currentState = RED;
      break;
  }
}
